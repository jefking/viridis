name: Test and Coverage

on:
  push:
    branches: [ main, develop, '**' ]
  pull_request:
    branches: [ main, develop ]
  merge_group:

jobs:
  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: src/package-lock.json
      
      - name: Install dependencies
        run: |
          cd src
          npm ci
      
      - name: Run tests with coverage
        run: |
          cd src
          npm run test:coverage
        env:
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./src/coverage/lcov.info
          flags: unittests
          name: codecov-viridis
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Generate coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          cd src
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          echo "Coverage: ${COVERAGE}%"
          echo "COVERAGE=${COVERAGE}" >> $GITHUB_ENV
      
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('src/coverage/coverage-summary.json', 'utf8'));
            const comment = `## Test Coverage Report
            
            | Metric | Coverage |
            |--------|----------|
            | Statements | ${coverage.total.statements.pct}% |
            | Branches | ${coverage.total.branches.pct}% |
            | Functions | ${coverage.total.functions.pct}% |
            | Lines | ${coverage.total.lines.pct}% |
            
            **Tests Passed:** âœ…
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

