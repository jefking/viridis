<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colors: Viridis</title>
</head>
<style>
    @import url('https://fonts.googleapis.com/css?family=Proza+Libre|Fira+Mono');

    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #app {
        display: flex;
        height: 100%;
        justify-content: center;
        align-items: center;
        flex-direction: column;

        input {
            padding: 1rem 1rem;
            font-size: 2rem;
            border: 0;
            border-radius: 3px;
            background: #fff;
        }

    }

    h1 {
        font-family: 'Proza Libre', sans-serif;
        color: #fff;
        font-weight: 300;
    }

    p {
        font-family: 'Proza Libre', sans-serif;
        color: #434251;
        font-weight: 300;
    }

    input[type="color"] {
        width: 40px;
        border: 1px solid black;
        margin: 0px;
        padding: 0px !important;
        height: 40px;
    }
</style>

<body>
    <div id="app" v-bind:style="{ backgroundColor: color}">
        <h1>Viridis</h1>
        <p>Id: {{ id }}</p>
        <p>Color: {{ color }}</p>
        <p>Latitude: {{ lat }}</p>
        <p>Longitude: {{ long }}</p>
        <div class="color">
            <input type="color" v-model="color" />
        </div>

    </div>
</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.26/vue.min.js"></script>
<script lang="javascript">
    new Vue({
        el: '#app',
        props: ['lat', 'long'],
        data: () => ({
            color: '#673AB7'
        }),
        created() {
            this.id = this.uuidv4();

            const success = (position) => {
                this.lat = position.coords.latitude;
                this.long = position.coords.longitude;
            };

            const error = (err) => {
                console.log(error)
            };

            // This will open permission popup
            navigator.geolocation.getCurrentPosition(success, error);
        },
        methods: {
            uuidv4() {
                return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                );
            }
        }
    })
</script>

</html>